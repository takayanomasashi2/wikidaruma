// prisma/schema.prisma
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime? // Add this line
  pages         Page[]
  accounts      Account[]
  sessions      Session[]
}

model Page {
  id        String   @id @default(cuid())
  title     String
  content   String?
  parentId  String?
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  parent    Page?    @relation("PageToPage", fields: [parentId], references: [id], onDelete: Cascade)
  children  Page[]   @relation("PageToPage")
  blocks    Block[]

  @@unique([id, userId])
  @@index([userId], name: "Page_userId_idx")
}

model Block {
  id            String                @id @default(cuid())
  type          BlockType
  content       String
  pageId        String
  order         Int
  checked       Boolean?              @default(false)
  embedding     Unsupported("vector")
  useCount      Int                   @default(0)
  avgSimilarity Float                 @default(0)
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  page          Page                  @relation(fields: [pageId], references: [id])
}

enum BlockType {
  text
  todo
  heading
  heading1
  heading2
  heading3
  subheading
  quote
  codeBlock
  paragraph
  orderedList
  listItem
  taskList
  horizontalRule
  math
  twitter
  doc
  mark_code
  mark_link
  bulletList
}
